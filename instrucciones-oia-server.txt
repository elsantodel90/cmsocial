LOG OF STEPS [Long, detailed for humans: Should probably be reduced to a few scripts]:

--> Installed xubuntu 16.04 32 bits version
sudo apt-get update
sudo apt-get dist-upgrade
sudo apt-get install git
git clone https://github.com/elsantodel90/oia-juez.git
git checkout oia-juez-develop

--> Download cms dependencies [We are going to install CMS 1.3: http://cms.readthedocs.io/en/latest/Installation.html] CMS 1.3:
sudo apt-get install build-essential fpc postgresql postgresql-client gettext python2.7 iso-codes shared-mime-info stl-manual cgroup-lite

--> Also, I had to manually add these in order for some stuff to compile without errors.
			  postgresql-server-dev-all libcups2-dev python-dev
		  
--> Create postgres database
sudo su - postgres
createuser oiajuez -P     [password oiapass]
createdb -O oiajuez database
psql database -c 'ALTER SCHEMA public OWNER TO oiajuez'
psql database -c 'GRANT SELECT ON pg_largeobject TO oiajuez'
exit

--> Install cmsocial
sudo apt-get install python-pip
sudo pip install --upgrade pip
sudo pip install --upgrade -r requirements.txt
     ---> Makesure the sqlalchemy in requirements.txt is the one installed [A new version might have been installed with ubuntu packages] 
	  Use "pip show sqlalchemy" To see which version is installed: If it must be fixed, use sudo pip install sqlalchemy==0.9.10                 
sudo apt-get install npm
sudo apt-get install nodejs-legacy
# This is the part that oia-scripts/build.sh does.
make
sudo python2 ./setup.py install
sudo rm -f /usr/local/etc/cmsocial.ini
sudo ln -s "$(pwd)"/config/cmsocial.ini /usr/local/etc/cmsocial.ini
   
   
--> INSTALL CMS (We should be careful with the selected version... Tested with that specific comit) CMS WEBPAGE: http://cms-dev.github.io/
		
git clone --recursive https://github.com/cms-dev/cms
cd cms
git checkout 664b893f97dca5fedaa00a39de7d89ae972e15da
# At the CMS repository directory:
sudo pip install -r requirements.txt
sudo ./prerequisites.py install
sudo ./setup.py install
# At the oia-juez repository directory:
sudo rm -f /usr/local/etc/cms.conf
sudo ln -s "$(pwd)"/oia-config/cms.conf /usr/local/etc/cms.conf

--> Log out and login [Check that "groups" list cmsuser: we want to be in the cmsuser group]

--> Create database from scratch (cmsDropDB to destroy existing database):
cmsInitDB
# This line updates the standard cms database, adding the tables and information used by cmsocial (cmsocial/db python files)
python2 -c "import cmsocial.db; from cms.db import metadata; metadata.create_all()"
psql oiajuez -h 127.0.0.1 -d database < sql_scripts/create_triggers.sql
   
--> There is an update script sql_updaters/addOiaInfo.sql (ending in ROLLBACK like all updaters: should be changed to COMMIT to use it), which adds the oia fields to the database.
--> IF (should not be the case normally) they were not already added with the previous steps, running it should work.
   
--> Create an admin user:
cmsAddAdmin -p pass user

--> Practise webserver is accesed at localhost:18888/contestName/
            ---> That last / is super important and cannot be ommited.

------> Configuration

-> Edit oia-config/cms.conf:
        Database connection line (if needed): postgresql+psycopg2://oiajuez:oiapass@localhost/database
        Make sure to change the "secret" from its dummy value

--> Database: create a single contest (should have id 1). Use cmsAdminWebServer for it (startUpOiaJuez.sh cannot be used before creating the first contest. Once there is a contest, adminWebServer is also started by startUpOiaJuez.sh)
		recommended name: OIAJ
		description: A declarative description, will be shown in the judge's homepage

--> By adding problems to this contest, problems are added to the judge. An admin can add tags to a problems. New tags are created the the add-tag.py script.
		
--> oia-scripts:
    startUpOiaJuezLogging.sh, should be run in a screen session, logs into oia-scripts/oiaJuezLogs.
	build.sh,  builds and updates everything (if changes are made to the site, the server should be shut down, this should be run, the server should be restart. Shutting down logging is not necessary)
	startUpOiaJuez.sh, starts and keeps up the server itself, should be run on a screen session. CTRL + C stops it.
	print-users.py, prints information from the database about all the registered users.
	set-access-level.py, allows to change the access level of a user (0 -> admin, 6 -> normal user, some intermediate levels allow modifying tags, we should probably not use them)
	set-contest-homename-and-title.py, allows to set homename ("OIAJ", shown in the upper-left button) and title ("OIAJ - Juez Online Oficial de la Olimpíada Informática Argentina.") for the webpage.
	add-tag.py, creates a new tag

--> tags conventions (they are used by the system, so this naming must be respected): 
	year tags like:
		año:2016
		año:2007
		año:2006
		año:2005
		año:1998
	topic tags like:
		tema:dp
		tema:dijkstra
		tema:goloso
	contest tags like:
		certamen:MetropolitanoNivel1
		certamen:NacionalNivel1
		certamen:NacionalNivel3
		certamen:Selectivo
		certamen:CIIC
		certamen:IOI





######################################################################
######################################################################
####### ESENCIALMENTE OTSOLETO: INSTRUCCIONES PREVIAS QUE NO VAN  ####
######################################################################
######################################################################

"Readme" del proyecto  cmsocial
https://github.com/algorithm-ninja/cmsocial/tree/develop#cmsocial

sudo aptitude install npm node

Actualizar node a una version nueva: (Ubuntu trae una vieja)
sudo npm cache clean -f
sudo npm install -g n
sudo n stable

Actualizar npm a una version nueva?
npm update -g npm

---> El proyecto de angular de cmsocial
    sudo npm install -g grunt-cli bower yo generator-karma generator-angular


Nota: Siempre que querramos correr un servicio de cms, usamos algo de la pinta
    export CMS_CONFIG=archivo-de-configuracion-a-usar; cmsResourceService -a
para asi poder especificar el config-file. Esto ya esta automatizado en ./cmsRun.sh, ejemplo:
    ./cmsRun.sh cmsResourceService -a


=> Es buena idea primero que nada instalar las dependencias de *ubuntu* de cms, por las dudas
	http://cms.readthedocs.io/en/v1.2/Installation.html
=> Crear un virtualenv para todo esto. 
	(En produccion con un server completamente dedicado, uno podria instalar todo globalmente sin demasiado problema) 
	(  http://docs.python-guide.org/en/latest/dev/virtualenvs/  )
	mkvirtualenv oia-juez
=> Trabajar siempre en ese virtualenv (workon oia-juez)
=> Actualizar pip. Es buena costumbre siempre que creamos un nuevo virtualenv.
	pip install --upgrade pip
=> Instalar los requirements de python:
	pip install -r requirements.txt
	Fijarse si tira errores. Por ejemplo tener en cuenta si salta algo con:
		http://stackoverflow.com/questions/29134512/insecureplatformwarning-a-true-sslcontext-object-is-not-available-this-prevent
	   (Yo probe con pip install --upgrade pyopenssl ndg-httpsclient pyasn1)
	O por ejemplo, para que me compilen los requirements sin error tuve que instalar este paquetito (que tiene cups.h):
		sudo aptitude install libcups2-dev
=> Al instalar el anterior, se baja un repo del cms, con su requirements.txt. Instalar ese! [QUIZAS NO HACE FALTA SI INSTALAMOS PRIMERO LAS DEPENDENCIAS?]
=> Correr python setup.py build
=> Correr python setup.py install 
=> oia-config/cms.conf.sample contiene la configuracion del sistema. Minimamente ahi se configura:
	--> El password de la db de postgresql
	--> La secret_key
    --> Puertos a usar
=> Crear la base de datos como explica en http://cms.readthedocs.io/en/v1.2/Running%20CMS.html
	sudo su - postgres
	createuser oia-juez-user -P
	[ACA NOS PIDE PASSWORD]
	createdb -O oia-juez-user oia-juez-db
	psql oia-juez-db -c 'ALTER SCHEMA public OWNER TO "oia-juez-user"'
	psql oia-juez-db -c 'GRANT SELECT ON pg_largeobject TO "oia-juez-user"'
=> Inicializar la base de datos creada anteriormente:
	./cmsRun.sh cmsInitDB
    export CMS_CONFIG=oia-config/cms.conf.sample; python2 -c "import cmsocial.db; from cms.db import metadata; metadata.create_all()"
    psql oia-juez-user -h 127.0.0.1 -d oia-juez-db < sql_scripts/create_triggers.sql
=> Crear un usuario admin: ./cmsRun.sh cmsAddAdmin -p passwordUsuarioAdmin nombreUsuarioAdmin
=> Crear un link en al cmsocial.ini (hay un path hardcodeado a un lugar horrible) [Si no usamos ningun virtualenv e instalamos posta, tocar el archivo de una? Mejor link igual]
        sudo ln -s /home/santo/repos/git/oia-juez/config/cmsocial.ini /usr/local/etc/
